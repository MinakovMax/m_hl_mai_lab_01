version: "2.1"

services:
  mai-db-node-ex01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: mai-db-node-ex01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: "1"
    #   command: >
    #     --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
    #     --general-log=ON
    #     --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:3306
    healthcheck:
      test: '/usr/bin/mariadb --user=stud --password=stud --execute "SHOW DATABASES;"'
      interval: 15s
      timeout: 1s
      retries: 5
    volumes:
      - db-node-ex01-data:/var/lib/mysql

  db-node-2:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db-node-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: "1"
    networks:
      - arch-network
    ports:
      - 3361:3306
    volumes:
      - db-node-2-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    command: >
      --initial
    volumes:
      - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: '/usr/bin/mysql --user=stud --password=stud --execute "SHOW DATABASES;"'
      timeout: 20s
      retries: 5
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"
    depends_on:
      - mai-db-node-ex01
      - db-node-2

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - arch-network
    volumes:
      - cache:/data

  my_service:
    build:
      context: my_service
      dockerfile: Dockerfile
    container_name: my_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - CACHE=cache:6379
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - arch-network
    depends_on:
      - proxysql
      - cache

  visit_server:
    build:
      context: visit_server
      dockerfile: Dockerfile
    container_name: visit_server
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - SERVICE_HOST=my_service
    restart: unless-stopped
    ports:
      - 8081:8081
    networks:
      - arch-network
    depends_on:
      - proxysql

  temperature_server:
    build:
      context: temperature_server
      dockerfile: Dockerfile
    container_name: temperature_server
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - SERVICE_HOST=my_service
    restart: unless-stopped
    ports:
      - 8082:8082
    networks:
      - arch-network
    depends_on:
      - proxysql

volumes:
  db-node-ex01-data:
  db-node-2-data:
  proxysql-data:
  cache:

networks:
  arch-network:
    driver: "bridge"
    external: false
